# Generated by Django 3.1.2 on 2020-12-10 09:27

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='HostGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('desc', models.TextField(blank=True, null=True, verbose_name='描述')),
                ('ctime', models.DateTimeField(default=datetime.datetime.now, verbose_name='创建时间')),
                ('utime', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('name', models.CharField(error_messages={'required': '主机名必须填写', 'unique': '该主机组已存在，请不要重复添加'}, max_length=32, unique=True, verbose_name='主机组名')),
            ],
            options={
                'verbose_name': '主机组',
                'verbose_name_plural': '主机组',
                'db_table': 'hostgroup',
            },
        ),
        migrations.CreateModel(
            name='RemoteUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('desc', models.TextField(blank=True, null=True, verbose_name='描述')),
                ('ctime', models.DateTimeField(default=datetime.datetime.now, verbose_name='创建时间')),
                ('utime', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('name', models.CharField(max_length=32, verbose_name='名称')),
                ('username', models.CharField(max_length=64, verbose_name='用户名')),
                ('password', models.CharField(max_length=128, verbose_name='密码')),
                ('enabled', models.BooleanField(default=False, verbose_name='是否su root')),
                ('superuser', models.CharField(blank=True, max_length=64, null=True, verbose_name='超级用户')),
                ('superpass', models.CharField(blank=True, max_length=128, null=True, verbose_name='特权密码')),
            ],
            options={
                'verbose_name': '主机账户',
                'verbose_name_plural': '主机账户',
                'db_table': 'remote_user',
                'unique_together': {('name', 'username', 'password')},
            },
        ),
        migrations.CreateModel(
            name='RemoteUserBindHost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('desc', models.TextField(blank=True, null=True, verbose_name='描述')),
                ('ctime', models.DateTimeField(default=datetime.datetime.now, verbose_name='创建时间')),
                ('utime', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('hostname', models.CharField(error_messages={'unique': '该主机已存在'}, max_length=128, unique=True, verbose_name='主机名')),
                ('type', models.SmallIntegerField(choices=[(1, '服务器'), (2, '交换机'), (3, '虚拟机')], default=1, verbose_name='类型')),
                ('ip', models.GenericIPAddressField(error_messages={'unique': '该IP已存在'}, unique=True, verbose_name='IP')),
                ('protocol', models.SmallIntegerField(choices=[(1, 'ssh'), (2, 'rdp'), (3, 'vnc'), (4, 'telnet')], default=1, verbose_name='协议')),
                ('env', models.SmallIntegerField(choices=[(1, 'product'), (2, 'dev')], default=1, verbose_name='环境')),
                ('port', models.SmallIntegerField(default=22, verbose_name='端口')),
                ('release', models.CharField(default='Centos', max_length=128, verbose_name='系统')),
                ('platform', models.SmallIntegerField(choices=[(1, 'linux'), (2, 'windows')], default=1, verbose_name='平台')),
                ('security', models.CharField(blank=True, help_text='rdp 验证方式，可选项：rdp，tls，nla，nla-ext', max_length=32, null=True, verbose_name='rdp验证方式')),
                ('enabled', models.BooleanField(default=True, verbose_name='是否启用')),
                ('host_group', models.ManyToManyField(blank=True, to='assets.HostGroup', verbose_name='主机组')),
                ('remote_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='assets.remoteuser')),
            ],
            options={
                'verbose_name': '主机绑定',
                'verbose_name_plural': '主机绑定',
                'db_table': 'remoteuser_host',
            },
        ),
        migrations.CreateModel(
            name='Hosts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('desc', models.TextField(blank=True, null=True, verbose_name='描述')),
                ('ctime', models.DateTimeField(default=datetime.datetime.now, verbose_name='创建时间')),
                ('utime', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('cpu_number', models.SmallIntegerField(blank=True, null=True, verbose_name='物理CPU个数')),
                ('vcpu_number', models.SmallIntegerField(blank=True, null=True, verbose_name='逻辑CPU个数')),
                ('cpu_info', models.CharField(blank=True, max_length=128, null=True, verbose_name='CPU')),
                ('os', models.CharField(blank=True, max_length=64, null=True, verbose_name='系统')),
                ('os_kernel', models.CharField(blank=True, max_length=255, null=True, verbose_name='系统内核')),
                ('memory', models.CharField(blank=True, max_length=12, null=True, verbose_name='内存/G')),
                ('disk', models.CharField(blank=True, max_length=12, null=True, verbose_name='硬盘/G')),
                ('filesystems', models.TextField(blank=True, null=True, verbose_name='文件系统')),
                ('interfaces', models.TextField(blank=True, null=True, verbose_name='网卡信息')),
                ('server_model', models.CharField(blank=True, max_length=128, null=True, verbose_name='型号')),
                ('server', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='assets.remoteuserbindhost')),
            ],
            options={
                'verbose_name': '主机',
                'verbose_name_plural': '主机',
                'db_table': 'hosts',
            },
        ),
    ]
